<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\obj\Test_7seg.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\obj\Test_7seg.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 4.1 [Build 894]: Last Updated: Thu Jan 11 15:25:31 2018
<BR><P>
<H3>Maximum Stack Usage =        160 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; draw_board &rArr; drawSymbol &rArr; draw &rArr; __aeabi_idivmod
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[2d]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[6]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">NMI_Handler</a><BR>
 <LI><a href="#[7]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">HardFault_Handler</a><BR>
 <LI><a href="#[8]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">SVC_Handler</a><BR>
 <LI><a href="#[9]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">PendSV_Handler</a><BR>
 <LI><a href="#[a]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">SysTick_Handler</a><BR>
 <LI><a href="#[20]">Default_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20]">Default_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[23]">ACMP_IRQHandler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[27]">ADC_IRQHandler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[b]">BOD_IRQHandler</a> from drvsys.o(i.BOD_IRQHandler) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[1f]">CAN0_IRQHandler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[20]">Default_Handler</a> from startup_nuc1xx.o(.text) referenced 3 times from startup_nuc1xx.o(RESET)
 <LI><a href="#[d]">EINT0_IRQHandler</a> from drvgpio.o(i.EINT0_IRQHandler) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[e]">EINT1_IRQHandler</a> from drvgpio.o(i.EINT1_IRQHandler) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[f]">GPAB_IRQHandler</a> from drvgpio.o(i.GPAB_IRQHandler) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[10]">GPCDE_IRQHandler</a> from drvgpio.o(i.GPCDE_IRQHandler) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[7]">HardFault_Handler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[1d]">I2C0_IRQHandler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[1e]">I2C1_IRQHandler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[25]">I2S_IRQHandler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[6]">NMI_Handler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[24]">PDMA_IRQHandler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[22]">PS2_IRQHandler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[11]">PWMA_IRQHandler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[12]">PWMB_IRQHandler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[26]">PWRWU_IRQHandler</a> from drvsys.o(i.PWRWU_IRQHandler) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[9]">PendSV_Handler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[28]">RTC_IRQHandler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[2b]">Reset_Handler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[19]">SPI0_IRQHandler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[1a]">SPI1_IRQHandler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[1b]">SPI2_IRQHandler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[1c]">SPI3_IRQHandler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[8]">SVC_Handler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[a]">SysTick_Handler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[29]">SystemInit</a> from system_nuc1xx.o(i.SystemInit) referenced from startup_nuc1xx.o(.text)
 <LI><a href="#[13]">TMR0_IRQHandler</a> from test_7seg.o(i.TMR0_IRQHandler) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[14]">TMR1_IRQHandler</a> from test_7seg.o(i.TMR1_IRQHandler) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[15]">TMR2_IRQHandler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[16]">TMR3_IRQHandler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[17]">UART02_IRQHandler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[18]">UART1_IRQHandler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[21]">USBD_IRQHandler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[c]">WDT_IRQHandler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[2c]">__main</a> from __main.o(!!!main) referenced from startup_nuc1xx.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[2c]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[2e]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[30]"></a>__scatterload_rt2</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[61]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[62]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[31]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[63]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[35]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[64]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002A))

<P><STRONG><a name="[65]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000028))

<P><STRONG><a name="[66]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[67]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[68]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[69]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[6a]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[6b]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[6c]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000006))

<P><STRONG><a name="[6d]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000D))

<P><STRONG><a name="[6e]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))

<P><STRONG><a name="[6f]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[70]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[71]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[72]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[73]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002F))

<P><STRONG><a name="[74]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[75]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[76]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000008))

<P><STRONG><a name="[3a]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[77]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[78]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[79]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[7a]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[7b]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))

<P><STRONG><a name="[7c]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B))

<P><STRONG><a name="[2f]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[7d]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[32]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[34]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[7e]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[36]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; draw_board &rArr; drawSymbol &rArr; draw &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[7f]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[3f]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[39]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[80]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[3b]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[2b]"></a>Reset_Handler</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))

<P><STRONG><a name="[6]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>ACMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>CAN0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>I2S_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>PDMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>PS2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>PWMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>PWMB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>TMR2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TMR3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>UART02_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>UART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>USBD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_nuc1xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[81]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[44]"></a>__aeabi_uidivmod</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM4_Freq
</UL>

<P><STRONG><a name="[82]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[45]"></a>__aeabi_idivmod</STRONG> (Thumb, 326 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM4_Freq
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RND
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw
</UL>

<P><STRONG><a name="[83]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[84]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[85]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[33]"></a>__user_setup_stackheap</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[38]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[86]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[3d]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[87]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[3c]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[88]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[89]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[8a]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[b]"></a>BOD_IRQHandler</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, drvsys.o(i.BOD_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BOD_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>DrvSYS_Delay</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, drvsys.o(i.DrvSYS_Delay))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_board_all_seg
</UL>

<P><STRONG><a name="[d]"></a>EINT0_IRQHandler</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, drvgpio.o(i.EINT0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EINT0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>EINT1_IRQHandler</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, drvgpio.o(i.EINT1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EINT1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>GPAB_IRQHandler</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, drvgpio.o(i.GPAB_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPAB_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>GPCDE_IRQHandler</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, drvgpio.o(i.GPCDE_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPCDE_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>InitHCLK12M</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, timerlib.o(i.InitHCLK12M))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[55]"></a>InitPWM</STRONG> (Thumb, 148 bytes, Stack size 0 bytes, pmwlib.o(i.InitPWM))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[40]"></a>InitTIMER0</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, timerlib.o(i.InitTIMER0))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = InitTIMER0
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[42]"></a>InitTIMER1</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, timerlib.o(i.InitTIMER1))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = InitTIMER1
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[53]"></a>Init_board</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, boardlib.o(i.Init_board))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[54]"></a>Initial_Lcd</STRONG> (Thumb, 722 bytes, Stack size 0 bytes, lcdlib.o(i.Initial_Lcd))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[43]"></a>PWM4_Freq</STRONG> (Thumb, 164 bytes, Stack size 40 bytes, pmwlib.o(i.PWM4_Freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = PWM4_Freq &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[26]"></a>PWRWU_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, drvsys.o(i.PWRWU_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PWRWU_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>RND</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, test_7seg.o(i.RND))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RND &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spawn
</UL>

<P><STRONG><a name="[29]"></a>SystemInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, system_nuc1xx.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(.text)
</UL>
<P><STRONG><a name="[13]"></a>TMR0_IRQHandler</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, test_7seg.o(i.TMR0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>TMR1_IRQHandler</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, test_7seg.o(i.TMR1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>__ARM_common_switch8</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, drvgpio.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;new_seg_intToHex
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_pressed
</UL>

<P><STRONG><a name="[47]"></a>check</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, test_7seg.o(i.check))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = check
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;search_music
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fall
</UL>

<P><STRONG><a name="[58]"></a>check_count</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, boardlib.o(i.check_count))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = check_count
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[49]"></a>clear</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, lcdlib.o(i.clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = clear &rArr; draw &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_board
</UL>

<P><STRONG><a name="[5d]"></a>clear_cubes</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, test_7seg.o(i.clear_cubes))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = clear_cubes
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4a]"></a>draw</STRONG> (Thumb, 278 bytes, Stack size 32 bytes, lcdlib.o(i.draw))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = draw &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawSymbol
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawAlphabet
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear
</UL>

<P><STRONG><a name="[4b]"></a>drawAlphabet</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, lcdlib.o(i.drawAlphabet))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = drawAlphabet &rArr; draw &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4c]"></a>drawSymbol</STRONG> (Thumb, 72 bytes, Stack size 40 bytes, lcdlib.o(i.drawSymbol))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = drawSymbol &rArr; draw &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_board
</UL>

<P><STRONG><a name="[4d]"></a>draw_board</STRONG> (Thumb, 214 bytes, Stack size 24 bytes, test_7seg.o(i.draw_board))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = draw_board &rArr; drawSymbol &rArr; draw &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pointY
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawSymbol
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4f]"></a>fall</STRONG> (Thumb, 234 bytes, Stack size 16 bytes, test_7seg.o(i.fall))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = fall &rArr; check
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;search_music
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[50]"></a>is_pressed</STRONG> (Thumb, 314 bytes, Stack size 4 bytes, boardlib.o(i.is_pressed))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = is_pressed &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[37]"></a>main</STRONG> (Thumb, 1700 bytes, Stack size 56 bytes, test_7seg.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = main &rArr; draw_board &rArr; drawSymbol &rArr; draw &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;toneToFreq
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_board_all_seg
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;search_music
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_keyboard
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pointY
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;new_seg_intToHex
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_pressed
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawSymbol
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawAlphabet
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_count
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM4_Freq
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initial_Lcd
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_board
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTIMER1
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTIMER0
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitPWM
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitHCLK12M
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;turn
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spawn
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shift
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fall
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_board
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_cubes
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[59]"></a>new_seg_intToHex</STRONG> (Thumb, 94 bytes, Stack size 4 bytes, boardlib.o(i.new_seg_intToHex))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = new_seg_intToHex &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4e]"></a>pointY</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lcdlib.o(i.pointY))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_board
</UL>

<P><STRONG><a name="[57]"></a>read_keyboard</STRONG> (Thumb, 260 bytes, Stack size 0 bytes, boardlib.o(i.read_keyboard))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[48]"></a>search_music</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, pmwlib.o(i.search_music))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fall
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check
</UL>

<P><STRONG><a name="[5f]"></a>seg_pos</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, boardlib.o(i.seg_pos))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_board_all_seg
</UL>

<P><STRONG><a name="[5a]"></a>set_board_all_seg</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, boardlib.o(i.set_board_all_seg))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = set_board_all_seg
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvSYS_Delay
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;seg_pos
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5b]"></a>shift</STRONG> (Thumb, 132 bytes, Stack size 8 bytes, test_7seg.o(i.shift))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = shift
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5e]"></a>spawn</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, test_7seg.o(i.spawn))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = spawn &rArr; RND &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RND
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[56]"></a>toneToFreq</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, pmwlib.o(i.toneToFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = toneToFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5c]"></a>turn</STRONG> (Thumb, 206 bytes, Stack size 24 bytes, test_7seg.o(i.turn))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = turn
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[20]"></a>Default_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, timerlib.o(i.NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTIMER1
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTIMER0
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[3e]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>
<HR></body></html>
